-- Creación de la tabla Cuentas
CREATE TABLE Cuentas (
    Cuenta INT PRIMARY KEY,
    TotalCreditos DECIMAL(10,2) DEFAULT 0.00,
    TotalDebitos DECIMAL(10,2) DEFAULT 0.00,
    Saldo DECIMAL(10,2) DEFAULT 0.00
);

-- Creación de la tabla Transacciones
CREATE TABLE Transacciones (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Cuenta INT,
    Fecha DATE,
    Credito DECIMAL(10,2) DEFAULT 0.00,
    Debito DECIMAL(10,2) DEFAULT 0.00,
    FOREIGN KEY (Cuenta) REFERENCES Cuentas(Cuenta)
);

-- Inserción de datos de ejemplo en la tabla Cuentas
INSERT INTO Cuentas (Cuenta, TotalCreditos, TotalDebitos, Saldo) VALUES
(20010001, 800.00, 0.00, 800.00),
(20010002, 560.00, 0.00, 560.00),
(20010003, 1254.00, 0.00, 1254.00),
(20010004, 15000.00, 0.00, 15000.00),
(20010005, 256.00, 0.00, 256.00);

-- Inserción de datos de ejemplo en la tabla Transacciones
INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito) VALUES
(20010001, '2024-12-12', 800.00, 0.00),
(20010002, '2025-01-05', 560.00, 0.00),
(20010003, '2024-10-30', 1254.00, 0.00),
(20010004, '2025-01-14', 15000.00, 0.00),
(20010005, '2024-11-23', 256.00, 0.00);

-- Eliminación del procedimiento si ya existe
DROP PROCEDURE IF EXISTS RegistrarTransaccion;

-- Creación del procedimiento almacenado
DELIMITER //
CREATE PROCEDURE RegistrarTransaccion(
    IN p_Cuenta INT,
    IN p_Fecha DATE,
    IN p_Monto DECIMAL(10,2),
    IN p_Tipo ENUM('C', 'D') -- 'C' para crédito, 'D' para débito
)
BEGIN
    DECLARE v_SaldoActual DECIMAL(10,2);
    
    -- Verificar si la cuenta existe
    IF NOT EXISTS (SELECT 1 FROM Cuentas WHERE Cuenta = p_Cuenta) THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Cuenta no encontrada';
    END IF;
    
    DROP TABLE IF EXISTS Transacciones;

CREATE TABLE Transacciones (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Cuenta INT,
    Fecha DATE,
    Credito DECIMAL(10,2) DEFAULT 0.00,
    Debito DECIMAL(10,2) DEFAULT 0.00,
    FOREIGN KEY (Cuenta) REFERENCES Cuentas(Cuenta)
);

    
    -- Insertar la transacción en la tabla Transacciones
    IF p_Tipo = 'C' THEN
        INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito) VALUES (p_Cuenta, p_Fecha, p_Monto, 0.00);
    ELSE
        INSERT INTO Transacciones (Cuenta, Fecha, Credito, Debito) VALUES (p_Cuenta, p_Fecha, 0.00, p_Monto);
    END IF;
    
    -- Actualizar la tabla Cuentas
    IF p_Tipo = 'C' THEN
        UPDATE Cuentas
        SET TotalCreditos = TotalCreditos + p_Monto,
            Saldo = Saldo + p_Monto
        WHERE Cuenta = p_Cuenta;
    ELSE
        UPDATE Cuentas
        SET TotalDebitos = TotalDebitos + p_Monto,
            Saldo = Saldo - p_Monto
        WHERE Cuenta = p_Cuenta;
    END IF;
END //
DELIMITER ;
SHOW CREATE TABLE Cuentas;
SHOW CREATE TABLE Transacciones;

SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_NAME = 'Transacciones';

CALL reservas_hoteles.RegistrarTransaccion(20010001, '2025-02-01', 500.00, 'C');
CALL reservas_hoteles.RegistrarTransaccion(20010002, '2025-02-02', 200.00, 'D');
select*from reservas_hoteles.transacciones;
